# -*- coding: utf-8 -*-
"""machine_learning_01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KFx2kY8GLG_4Cf0-qMOuOUgR2lItxo9I

**Aula 01**

A ideia desse primeiro projeto é usar o machine learning para diferenciar dois animais com características diferentes: um porco e um cachorro.
"""

#Será usada classificação binária: 0 = Cachorro e 1 = Porco (Classificação)
#Usaremos 3 caractéristica: (Features)

#  0 = Pelo Curto e 1 = Pelo Longo
#  0 = Perna Longa e 1 = Perna Curta
#  0 = não faz 'Au Au' e 1 = faz 'Au au'

porco1 = [0,1,0]
porco2 = [0,1,1]
porco3 = [1,1,0]

cachorro1 = [0,1,1]
cachorro2 = [1,0,1]
cachorro3 = [1,1,1]

treino_x = [porco1,porco2,porco3,cachorro1,cachorro2, cachorro3]
treino_y = [ 1,1,1,0,0,0] #labels

#importando a biblioteca que será usada
from sklearn.svm import LinearSVC

#estanciando o LinearSVC
model = LinearSVC()

#treinando o modelo
model.fit(treino_x,treino_y)

#verificando a previsão do modelo ( 0 = cachorro ,  1 = porco)

animal_misterioso = [1,1,1]
model.predict([animal_misterioso])

#verificando a previsão do modelo ( 0 = cachorro ,  1 = porco)

misterio1 = [1,1,1]
misterio2 = [1,1,0]
misterio3 = [0,1,1]

teste_x = [misterio1,misterio2,misterio3]
teste_y = [0,1,1] #o resultado real do misterio1, misterio2 e misterio3 é [0,1,1]

previsoes = model.predict(teste_x)

#comparação dos resultados previstos com o resultado real
previsoes == teste_y

#Taxa de Acerto

corretos = (previsoes == teste_y).sum() #numero de corretos (verdadeiro)
total = len(teste_y)
taxa_de_acerto = corretos/total
print('Taxa de Acertos: %.2f'%(taxa_de_acerto*100), '%')

"""Calculando a taxa de acerto usando o sklearn - accuracy_score"""

from sklearn.metrics import accuracy_score

taxa_de_acerto = accuracy_score(teste_y,previsoes)
print('Taxa de Acertos: %.2f'%(taxa_de_acerto*100), '%')